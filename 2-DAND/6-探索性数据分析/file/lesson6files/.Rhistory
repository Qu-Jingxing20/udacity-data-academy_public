#Term / 无明显意义丢弃
##带有na数据
#ggplot(aes(x = Term), data = pls2n) + geom_histogram(stat = 'count')
#需要加轴的代码
##排除na数据
#ggplot(aes(x = Term), data = subset(pls2n, !is.na(Term))) + geom_histogram(stat = 'count')
#date
#ggplot(aes(x = ListingCreationDate), data = pls2) + geom_histogram(stat = 'count', binwidth = 10)
# 此处可以得出图形但速度很慢且坐标比较奇怪，待请教
#credit
##使用na.进行排除，不理想。参见上面在read.csv读入时候进行转换
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = CreditGrade), data = subset(pls2n, !is.na(CreditGrade))) + geom_histogram(stat = 'count') + xlab('CreditGrade') + ylab('Counts') + labs(title="Credit Level") #可以和pls2对比，看下Null和NA的区别
#关于subset的使用还要再学习
#labs(title="Plot of length \n by dose", x ="Dose (mg)", y = "Teeth length")
#labs可以设定title，x，y，简单的使用xlab和ylab
#也可以使用ggtitle设定整体名字
#改样式需要使用theme，后续研究
####检验
#na.fail(pls2n)
#sum(is.na(pls2n))
#sum(is.na(pls2n$CreditGrade))
#sum(is.na(pls2n$BorrowerAPR))
summary(pls2n$CreditGrade)
#head(subset(pls2n, !is.na(CreditGrade)))
#LoanStatus / 无明显意义丢弃
##带有na数据
#ggplot(aes(x = LoanStatus), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus))) + geom_histogram(stat = 'count')
#Term / 无明显意义丢弃
##带有na数据
#ggplot(aes(x = Term), data = pls2n) + geom_histogram(stat = 'count')
#需要加轴的代码
##排除na数据
#ggplot(aes(x = Term), data = subset(pls2n, !is.na(Term))) + geom_histogram(stat = 'count')
#BorrowerAPR
##带有na数据
# ggplot(aes(x = BorrowerAPR), data = pls2n) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.00635, 0.51229), breaks = seq(0.00635, 0.51229, 0.05)) + scale_y_continuous(limits = c(0, 500)) # 包含所有数据
ggplot(aes(x = BorrowerAPR), data = subset(pls2n, !is.na(BorrowerAPR))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) + xlab('年化利率') + ylab('统计数量') + ggtitle('年化利率')#包含可见数据
summary(pls2n$BorrowerAPR)                                            # + facet_wrap(~gender)
#max(pls2n$BorrowerAPR)
#max如何使用
#bin并没有生效，需要后续研究。#需要加轴的代码.
##排除na数据
#BorrowerAPR
##带有na数据
# ggplot(aes(x = BorrowerAPR), data = pls2n) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.00635, 0.51229), breaks = seq(0.00635, 0.51229, 0.05)) + scale_y_continuous(limits = c(0, 500)) # 包含所有数据
ggplot(aes(x = BorrowerAPR), data = subset(pls2n, !is.na(BorrowerAPR))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) + xlab('Interest by Year') + ylab('Statistic Counts') + ggtitle('Interest by Year')#包含可见数据
summary(pls2n$BorrowerAPR)                                            # + facet_wrap(~gender)
#max(pls2n$BorrowerAPR)
#max如何使用
#bin并没有生效，需要后续研究。#需要加轴的代码.
##排除na数据
#BorrowerAPR
##带有na数据
# ggplot(aes(x = BorrowerAPR), data = pls2n) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.00635, 0.51229), breaks = seq(0.00635, 0.51229, 0.05)) + scale_y_continuous(limits = c(0, 500)) # 包含所有数据
ggplot(aes(x = BorrowerAPR), data = subset(pls2n, !is.na(BorrowerAPR))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) + xlab('Interest by Year') + ylab('Statistic Counts') + ggtitle('Interest by Year')#包含可见数据
#summary(pls2n$BorrowerAPR)                                            # + facet_wrap(~gender)
#max(pls2n$BorrowerAPR)
#max如何使用
#bin并没有生效，需要后续研究。#需要加轴的代码.
##排除na数据
#BorrowerAPR
##带有na数据
# ggplot(aes(x = BorrowerAPR), data = pls2n) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.00635, 0.51229), breaks = seq(0.00635, 0.51229, 0.05)) + scale_y_continuous(limits = c(0, 500)) # 包含所有数据
ggplot(aes(x = BorrowerAPR), data = subset(pls2n, !is.na(BorrowerAPR))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) + xlab('Interest by Year') + ylab('Statistic Counts') + ggtitle('Interest by Year')#包含可见数据
summary(pls2n$BorrowerAPR)                                            # + facet_wrap(~gender)
#max(pls2n$BorrowerAPR)
#max如何使用
#bin并没有生效，需要后续研究。#需要加轴的代码.
##排除na数据
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
#library(rstudioapi) # 设置目录使用
library(dplyr)
library(gridExtra)
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(dplyr)
library(gridExtra)
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
#library(rstudioapi) # 设置目录使用
library(dplyr)
library(gridExtra)
library(ggplot2)
#library(rstudioapi) # 设置目录使用
library(dplyr)
library(gridExtra)
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
#library(rstudioapi) # 设置目录使用
library(dplyr)
library(gridExtra)
#BorrowerAPR
##带有na数据
# ggplot(aes(x = BorrowerAPR), data = pls2n) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.00635, 0.51229), breaks = seq(0.00635, 0.51229, 0.05)) + scale_y_continuous(limits = c(0, 500)) # 包含所有数据
ggplot(aes(x = BorrowerAPR), data = subset(pls2n, !is.na(BorrowerAPR))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) + xlab('Interest by Year') + ylab('Statistic Counts') + ggtitle('Interest by Year')#包含可见数据
summary(pls2n$BorrowerAPR)                                            # + facet_wrap(~gender)
#max(pls2n$BorrowerAPR)
#max如何使用
#bin并没有生效，需要后续研究。#需要加轴的代码.
##排除na数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram(binwidth = 100) + scale_x_continuous(breaks = seq(0, 30000, 2000)) + xlab('初始贷款数据') + ylab('统计数量') + ggtitle('初始贷款数据')#包含可见数据
summary(pls2n$BorrowerAPR)                                            # + facet_wrap(~gender)
#max(pls2n$BorrowerAPR)
#max如何使用
#bin并没有生效，需要后续研究。#需要加轴的代码.
##排除na数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram(binwidth = 100) + scale_x_continuous(breaks = seq(0, 30000, 2000)) + xlab('Init Loan Data') + ylab('Statistic Count') + ggtitle('Init Loan Data')#包含可见数据
summary(pls2n$BorrowerAPR)                                            # + facet_wrap(~gender)
#max(pls2n$BorrowerAPR)
#max如何使用
#bin并没有生效，需要后续研究。#需要加轴的代码.
##排除na数据
#ListingCategory
##带有na数据
#ggplot(aes(x = ListingCategory), data = pls2n) + geom_histogram(stat = 'count')
#需要加轴的代码
##排除na数据
ggplot(aes(x = ListingCategory), data = subset(pls2n, !is.na(ListingCategory))) + geom_histogram(stat = 'count') + scale_x_continuous( breaks = seq(0, 20, 1)) + xlab('贷款人分类') + ylab('统计数量') + ggtitle('贷款人分类')
#后续进行排序
summary(pls2n$ListingCategory)
#ListingCategory
##带有na数据
#ggplot(aes(x = ListingCategory), data = pls2n) + geom_histogram(stat = 'count')
#需要加轴的代码
##排除na数据
ggplot(aes(x = ListingCategory), data = subset(pls2n, !is.na(ListingCategory))) + geom_histogram(stat = 'count') + scale_x_continuous( breaks = seq(0, 20, 1)) + xlab('Loan People Type') + ylab('Statistic Count') + ggtitle('Loan People Type')
#后续进行排序
summary(pls2n$ListingCategory)
#EmploymentStatusDuration
##带有na数据
#ggplot(aes(x = EmploymentStatusDuration), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = EmploymentStatusDuration), data = subset(pls2n, !is.na(EmploymentStatusDuration))) + geom_histogram(stat = 'count') + xlab('Hired Time') + ylab('Statistic Count') + ggtitle('Hired Time')
summary(pls2n$EmploymentStatusDuration)
#TotalCreditLinespast7years
##带有na数据
#ggplot(aes(x = TotalCreditLinespast7years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + xlab('7年内贷款次数') + ylab('数量统计') + ggtitle('7年内贷款次数')
summary(pls2n$TotalCreditLinespast7years)
#binwith为啥不生效
#DelinquenciesLast7Years（数据不明显，丢弃）
##带有na数据
#ggplot(aes(x = DelinquenciesLast7Years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据(数值型的不用排除)
#ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2n, !is.na(DelinquenciesLast7Years))) + geom_histogram(stat = 'count')
#TotalCreditLinespast7years
##带有na数据
#ggplot(aes(x = TotalCreditLinespast7years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + xlab('7 Year Load Times') + ylab('数量统计') + ggtitle('7年内贷款次数')
summary(pls2n$TotalCreditLinespast7years) + theme(text = element_text(family = 'SimSun'))
#binwith为啥不生效
#DelinquenciesLast7Years（数据不明显，丢弃）
##带有na数据
#ggplot(aes(x = DelinquenciesLast7Years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据(数值型的不用排除)
#ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2n, !is.na(DelinquenciesLast7Years))) + geom_histogram(stat = 'count')
#TotalCreditLinespast7years
##带有na数据
#ggplot(aes(x = TotalCreditLinespast7years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + xlab('7 Year Load Times') + ylab('数量统计') + ggtitle('7年内贷款次数')
summary(pls2n$TotalCreditLinespast7years) + theme(plot.title=element_text(size=20, family="Noto Sans CJK SC")
#binwith为啥不生效
#DelinquenciesLast7Years（数据不明显，丢弃）
##带有na数据
#ggplot(aes(x = DelinquenciesLast7Years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据(数值型的不用排除)
#ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2n, !is.na(DelinquenciesLast7Years))) + geom_histogram(stat = 'count')
#TotalCreditLinespast7years
##带有na数据
#ggplot(aes(x = TotalCreditLinespast7years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + xlab('7 Year Load Times') + ylab('数量统计') + ggtitle('7年内贷款次数')
summary(pls2n$TotalCreditLinespast7years) + theme(family="Noto Sans CJK SC")
theme$text$family <- "STFangsong"
theme$text$family <- "STFangsong"
theme < -theme_get()
#TotalCreditLinespast7years
##带有na数据
#ggplot(aes(x = TotalCreditLinespast7years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + xlab('7 Year Load Times') + ylab('数量统计') + ggtitle('7年内贷款次数')
summary(pls2n$TotalCreditLinespast7years) + theme(text=element_text(family="SimHei"))
#binwith为啥不生效
#DelinquenciesLast7Years（数据不明显，丢弃）
##带有na数据
#ggplot(aes(x = DelinquenciesLast7Years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据(数值型的不用排除)
#ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2n, !is.na(DelinquenciesLast7Years))) + geom_histogram(stat = 'count')
#TotalCreditLinespast7years
##带有na数据
#ggplot(aes(x = TotalCreditLinespast7years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + xlab('7 Year Load Times') + ylab('数量统计') + ggtitle('7年内贷款次数')
summary(pls2n$TotalCreditLinespast7years) + theme(text=element_text(family="Hei"))
#binwith为啥不生效
#DelinquenciesLast7Years（数据不明显，丢弃）
##带有na数据
#ggplot(aes(x = DelinquenciesLast7Years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据(数值型的不用排除)
#ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2n, !is.na(DelinquenciesLast7Years))) + geom_histogram(stat = 'count')
theme < -theme_get()
windowsFonts(CA=windowsFont("Calibri"))
Fonts(CA=windowsFont("Calibri"))
#TotalCreditLinespast7years
##带有na数据
#ggplot(aes(x = TotalCreditLinespast7years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + xlab('7 Year Load Times') + ylab('数量统计') + ggtitle('7年内贷款次数') + theme(text=element_text(family="Hei"))
summary(pls2n$TotalCreditLinespast7years)
#binwith为啥不生效
#DelinquenciesLast7Years（数据不明显，丢弃）
##带有na数据
#ggplot(aes(x = DelinquenciesLast7Years), data = pls2n) + geom_histogram(stat = 'count')
##排除na数据(数值型的不用排除)
#ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2n, !is.na(DelinquenciesLast7Years))) + geom_histogram(stat = 'count')
#DebtToIncomeRatio
##带有na数据
#ggplot(aes(x = DebtToIncomeRatio), data = pls2n) + geom_point(stat = 'count')
##排除na数据
ggplot(aes(x = DebtToIncomeRatio),
data = subset(pls2n, !is.na(DebtToIncomeRatio))) + geom_point(stat = 'count') +
scale_y_continuous(limits = c(5, 4000)) +
scale_x_continuous(limits = c(0, 1)) +
xlab('Debt与Income比例') + ylab('数量统计') + ggtitle('Debt与Income比例')
#ggplot参数在，后面换行，+的话是在+后面换行
summary(pls2n$DebtToIncomeRatio)
#使用point图，为什么histgram没有图形，需要限制99%的值，有一些会非常大（outlier）。使用IncomeRange，此参数后续研究，
#DebtToIncomeRatio
##带有na数据
#ggplot(aes(x = DebtToIncomeRatio), data = pls2n) + geom_point(stat = 'count')
##排除na数据
ggplot(aes(x = DebtToIncomeRatio),
data = subset(pls2n, !is.na(DebtToIncomeRatio))) + geom_point(stat = 'count') +
scale_y_continuous(limits = c(5, 4000)) +
scale_x_continuous(limits = c(0, 1)) +
xlab('Debt与Income比例') + ylab('数量统计') + ggtitle('Debt与Income比例') + theme(text=element_text(family="Hei"))
#ggplot参数在，后面换行，+的话是在+后面换行
summary(pls2n$DebtToIncomeRatio)
#使用point图，为什么histgram没有图形，需要限制99%的值，有一些会非常大（outlier）。使用IncomeRange，此参数后续研究，
#IncomeRange
##带有na数据
ggplot(aes(x = IncomeRange), data = pls2n) + geom_histogram(stat = 'count') + xlab('收入范围') + ylab('数量统计') + ggtitle('收入范围')
summary(pls2n$IncomeRange)
##排除na数据(没有na值)
#ggplot(aes(x = IncomeRange), data = subset(pls2n, !is.na(IncomeRange))) + geom_histogram(stat = 'count')
#temp
#ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) + geom_freqpoly(aes(color = gender), binwidth=10) + scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +  xlab('好友数量') + ylab('Percentage of users with that friend count')
#IncomeRange
##带有na数据
ggplot(aes(x = IncomeRange), data = pls2n) + geom_histogram(stat = 'count') + xlab('收入范围') + ylab('数量统计') + ggtitle('收入范围') + theme(text=element_text(family="Hei"))
summary(pls2n$IncomeRange)
##排除na数据(没有na值)
#ggplot(aes(x = IncomeRange), data = subset(pls2n, !is.na(IncomeRange))) + geom_histogram(stat = 'count')
#temp
#ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) + geom_freqpoly(aes(color = gender), binwidth=10) + scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +  xlab('好友数量') + ylab('Percentage of users with that friend count')
str(pls2n)
View(pls2n)
ggplot(aes(x = BorrowerAPR), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + ggtitle('CreditGrade - BorrowerAPR')
#为啥freqpoly没有画出点轨迹图，后续研究
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + ggtitle('CreditGrade - TotalCreditLinespast7years')
plot2a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
plot2b <- ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(1, 10)
ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(1, 10) + ggtitle('CreditGrade - DelinquenciesLast7Years')
#summary(pls2o$DelinquenciesLast7Years)
summary(pls2o$DebtToIncomeRatio)
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.05)) + ggtitle('CreditGrade - DebtToIncomeRatio - 直方图')
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
#ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#箱线图适合plot的统计，才返现居然没有贷款额参数，马上补了LoanOriginalAmount
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05)) + ggtitle('CreditGrade - DebtToIncomeRatio - 箱线图')
#summary(pls2o$DebtToIncomeRatio)
#箱线图适合plot的统计，才返现居然没有贷款额参数，马上补了LoanOriginalAmount
#以上的方法是调整显示图形，但是当knit输出时候，会把图形放在文档中，图形很大的时候，字会看不清，尝试使用别的方法，如后面代码
#theme(axis.text.x = element_text(size = 15, family = myFont, color = green, face = bold, vjust = 0.5, hjust = 0.5, angle = 45))
table(pls2o$IncomeRange)
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 18, face = 'bold')) + theme(axis.text.x = element_text(size = 18, face = 'bold'))
#ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(stat = 'count') + ggtitle('Occupation - IncomeRange')
#geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0))
#geom_point(aes(color = CreditGrade)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = CreditGrade, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + ggtitle('LoanOriginalAmount - CreditGrade')#+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Loan - APR - CreditGrade')# + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#ggplot(aes(x = age, y = friend_count), data = pf) + geom_point(alpha = 1/20, position = position_jitter(h = 0)) + xlim(13,90) + coord_trans(y = 'sqrt')
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = IncomeRange), alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Loan - APR - Income')# + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#ggplot(aes(x = age, y = friend_count), data = pf) + geom_point(alpha = 1/20, position = position_jitter(h = 0)) + xlim(13,90) + coord_trans(y = 'sqrt')
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange) + ggtitle('Loan - APR - CreditGrade - Income')# + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#ggplot(aes(x = age, y = friend_count), data = pf) + geom_point(alpha = 1/20, position = position_jitter(h = 0)) + xlim(13,90) + coord_trans(y = 'sqrt')
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
plot1a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + ggtitle('7年内贷款次数')
plot1b <- ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 5000)) + ggtitle('贷款额统计') + theme(text=element_text(family="Hei"))
#+ ggtitle("Plant growth with\ndifferent treatments") + theme(plot.title = element_text(lineheight=.8, face="bold"))
# Title只是在每个plot上，grid.arrange无法定制title
grid.arrange(plot1a, plot1b, ncol = 2, top = '绘图1：公司运营考察/n公司7年内业务次数 vs 单次贷款额统计')
#https://stackoverflow.com/questions/8615530/place-title-of-multiplot-panel-with-ggplot2
#2种方式增加gridtitle
#grid.text("title of this panel", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
plot2a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + ggtitle('7年内贷款次数与信用评级') + theme(text=element_text(family="Hei"))
plot2b <- ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(1, 10) + ggtitle('7年内超期还款次数与信用评级') + theme(text=element_text(family="Hei"))
grid.arrange(plot2a, plot2b, ncol = 1, top = '绘图2：贷款人信用评级') + theme(text=element_text(family="Hei"))
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, IncomeRange != 'Not displayed')) + geom_point(aes(color = CreditGrade), alpha = 1/2, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange)  +  ggtitle('绘图3：贷款额与收入水平关系') + theme(text=element_text(family="Hei"))
#subset_data = filter(data, IncomeRange != 'Not displayed')
#+ scale_color_brewer(type = 'div')
#ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/2, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange)  + ggtitle('绘图3：贷款额与收入水平关系')#+ scale_color_brewer(type = 'div') 无filter
install.packages(c("bitops", "car", "memisc", "RCurl"))
ggplot(diamonds, aes(x = carat, y = price)) + scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) + scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) + geom_point(fill = I('#F79420'), color = I('black'), shape = 21 )
#为什么会有几条浅色的线呢，后续研究
#add liner model
ggplot(diamonds, aes(x = carat, y = price)) + scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) + scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) + geom_point(color = I('#F79420'), alpha = 1/4) + stat_smooth(method = 'lm')
#shape 21 的话color是图形的边框色，fill是内部色。默认的是一个实心圆
# + 的顺序就是图层的顺序，最后的在最上面
qplot(carat, price, data = diamonds) + scale_y_continuous(trans = log10_trans()) + ggtitle('Price (log10) by Carat')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
qplot(carat, price, data = diamonds) + scale_y_continuous(trans = log10_trans()) + ggtitle('Price (log10) by Carat')
ggplot(diamonds, aes(x = carat, y = price)) + scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) + scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) + geom_point(fill = I('#F79420'), color = I('black'), shape = 21 )
#为什么会有几条浅色的线呢，后续研究
#add liner model
ggplot(diamonds, aes(x = carat, y = price)) + scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) + scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) + geom_point(color = I('#F79420'), alpha = 1/4) + stat_smooth(method = 'lm')
#shape 21 的话color是图形的边框色，fill是内部色。默认的是一个实心圆
# + 的顺序就是图层的顺序，最后的在最上面
# install these if necessary
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages('car')
install.packages('reshape')
install.packages('plyr')
#check packages
library(GGally)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(reshape2)
library(plyr)
# load the ggplot graphics package and the others
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# sample 10,000 diamonds from the data set
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
#ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
#以上为旧版本ggpairs
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(gridExtra)
library(grid)
plot1 <- qplot(data = diamonds, x = price, binwidth = 3, fill = I('orange')) + ggtitle('Price')
ggplot1 <- ggplot()
ggplot(aes(x = cut, y = price/carat), data = diamonds) + geom_point(aes(color = color)) + facet_wrap(~ clarity) + scale_color_brewer(type = 'div')
plot2 <- qplot(data = diamonds, x = price, binwidth = 0.01, fill = I('blue')) + ggtitle('Price(log10)') + scale_x_log10()
ggplot2 <- ggplot()
grid.arrange(plot1, plot2, ncol = 2)
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
#check packages
library(GGally)
library(scales)
library(memisc)
library(lattice)
library(MASS)
library(car)
library(reshape)
library(reshape2)
library(plyr)
# load the ggplot graphics package and the others
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# sample 10,000 diamonds from the data set
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
#ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
#以上为旧版本ggpairs
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(gridExtra)
library(grid)
plot1 <- qplot(data = diamonds, x = price, binwidth = 3, fill = I('orange')) + ggtitle('Price')
ggplot1 <- ggplot()
ggplot(aes(x = cut, y = price/carat), data = diamonds) + geom_point(aes(color = color)) + facet_wrap(~ clarity) + scale_color_brewer(type = 'div')
plot2 <- qplot(data = diamonds, x = price, binwidth = 0.01, fill = I('blue')) + ggtitle('Price(log10)') + scale_x_log10()
ggplot2 <- ggplot()
grid.arrange(plot1, plot2, ncol = 2)
#这里要注意一下前面的如果binwidth = 0.01的话，会输出上千万个点，就死掉了。下面运行的红色按钮可以终结程序
qplot(carat, price, data = diamonds) + scale_y_continuous(trans = log10_trans()) + ggtitle('Price (log10) by Carat')
qplot(carat, price, data = diamonds) + ggtitle('Price (log10) by Carat')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3), inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) + geom_point(color = 'orange') + scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2,3), breaks = c(0.2, 0.5, 1, 2, 3)) + scale_y_continuous( trans = log10_trans(), limits = c(350, 15000), breaks = c(350, 1000, 5000, 10000, 15000)) + ggtitle('Price (log10) by Cube-Root of Carat')
#limits和breaks的数值是显示时的限制和标尺。
#转换的作用是能够比原图更佳趋于线性，利于线性预测的符合度
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = function(x) x^(1/3),
inverse = function(x) x^3), limits = c(0.2, 3),
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = function(x) x^(1/3)), limits = c(0.2, 3),
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = function(x) x^(1/3), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
