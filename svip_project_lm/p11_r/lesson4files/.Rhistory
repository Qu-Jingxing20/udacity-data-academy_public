install.packages('swirl')
swirl()
library(swirl)
install.packages("swirl")
library(swirl)
install.packages('swirl')
library(swirl)
install.packages('swirl')
library(swirl)
install.packages('swirl')
library(swirl)
swirl()
qplot(x = friend_count, data = subset(pf, !is.na(gender)),binwidth = 10) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50)) + facet_wrap(~gender)
library(ggplot2)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),binwidth = 10) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50)) + facet_wrap(~gender)
getwd()
list.files()
pf <- read.csv('pseudo_facebook.tsv',sep = '\t')
names(pf)
# install.packages('ggplot2')
library(ggplot2)
# name(pf)
qplot(x=dob_day, data=pf)
# qplot(x=dob_day, data=pf,bins=25)
qplot(x=dob_day, data=pf) + scale_x_continuous(breaks=1:31)
# qplot(x=dob_day, data=pf) + scale_x_discrete(breaks=1:31)
# 课程中是discrete，报错，根据报错信息：
# Error: StatBin requires a continuous x variable the x variable is discrete. Perhaps you want stat="count"?
# 改为continuous就好了
library(ggplot2)
qplot(x=dob_day, data=pf) + scale_x_continuous(breaks=1:31) + facet_wrap(~dob_month,ncol = 3)
qplot(x = friend_count, data = pf)
str(pf)
qplot(x=friend_count, data=pf, xlim = c(0,1000))
# 使用标尺完成这个任务
qplot(x=friend_count, data=pf) + scale_x_continuous(limits = c(0,1000))
# 你会输入哪个代码，创建按照性别的直方图平面？
# 将它增加到下列代码中。
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
# binwidth是区分，breaks定义的标尺显示
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) + facet_wrap(~gender)
qplot(x = friend_count, data = na.omit(pf), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) + facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
qplot(x = tenure, data = pf, binwidth = 30, color = I('black'), fill = I('#099DD9') )
qplot(x = tenure/365, data = pf, binwidth = .25, color = I('black'), fill = I('#F79420') ) + scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
# tenure应该是使用时长，可以看出刚加入的还是占多数
qplot(x = tenure/365, data = pf, xlab = 'Numbers of users count in sample', ylab = 'Number of years users use', binwidth = .25, color = I('black'), fill = I('#F79420') ) + scale_x_continuous(breaks = seq(1,7,1), limits = c(0,7))
qplot(x = age, data = pf, binwidth = 1, color = I('black'), fill = I('orange')) + scale_x_continuous(breaks = seq(0,113,5))
summary(pf$age)
qplot(data = pf, x = friend_count)
summary(pf$friend_count)
summary(x = friend_count, data = pf)
library(ggplot2)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),binwidth = 10) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50)) + facet_wrap(~gender)
qplot(x = friend_count, y = ..count../sum(..count..), data = subset(pf,!is.na(gender)), binwidth = 10, geom = 'freqpoly', color = gender) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50))
qplot(x = friend_count, y = count, data = subset(pf,!is.na(gender)), binwidth = 10, geom = 'freqpoly', color = gender) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50))
qplot(x = friend_count, y = ..count.., data = subset(pf,!is.na(gender)), binwidth = 10, geom = 'freqpoly', color = gender) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50))
qplot(x = friend_count, y = ..count.., data = subset(pf,!is.na(gender)), xlab = 'Friend Count', ylab = 'Proportion of Users with that friend count', binwidth = 10, geom = 'freqpoly', color = gender) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50))
qplot(x = friend_count, y = ..count.., data = subset(pf,!is.na(gender)), binwidth = 10, geom = 'freqpoly', color = gender) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50))
qplot(x = friend_count, y = ..count../sum(..count..), data = subset(pf,!is.na(gender)), xlab = 'Friend Count', ylab = 'Proportion of Users with that friend count', binwidth = 10, geom = 'freqpoly', color = gender) + scale_x_continuous(lim = c(0,1000), breaks = seq(0,1000,50))
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('好友数量') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('好友数量') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
by(pf$www_likes, pf$gender, sum)
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot', ylim = c(0,1000))
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot') +  scale_y_continuous(limits = c(0,1000))
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot') +  coord_cartesian(ylim = c(0,100))
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot') +  coord_cartesian(ylim = c(0,1000))
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender)),geom = 'boxplot') +  coord_cartesian(ylim = c(0,250))
qplot(x = gender, y = friendships_initiated, data = subset(pf, !is.na(gender)),geom = 'boxplot') +  coord_cartesian(ylim = c(0,150))
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
？diamounds
?diamonds
summary(diamonds)
data(DATA_SET_NAME)
data(data_set_name)
diamonds$color
str(diamonds)
qplot(x=..count.., y=price, data=pf)
qplot(x=..count.., y=price, data=diamonds)
data("diamonds")
qplot(x=..count.., y=price, data=diamonds)
qplot( y=price, data=diamonds)
qplot( x = price, y = ..count.., data=diamonds)
qplot( x = price, data=diamonds)
#当只指定一个坐标时，另一个坐标会默认，比如价格的默认就是count
summary(diamonds)
#钻石数量
by(diamonds$price < 500)
by(pf$friendships_initiated, pf$gender, summary)
#钻石数量
length(diamonds$price < 500)
length(diamonds$price < 250)
#钻石数量
length(diamonds$price < 500)
length(diamonds$price >= 500)
#钻石数量
count(diamonds$price < 500)
#钻石数量
subset(diamonds,$price < 500)
#钻石数量
subset(diamonds,price < 500)
#钻石数量
length(subset(diamonds,price < 500))
#钻石数量
length(subset(diamonds,price < 500))
#钻石数量
length(subset(diamonds,price < 250))
#钻石数量
summary(subset(diamonds,price < 250))
table(diamonds$price < 500)
table(diamonds$price < 250)
#钻石数量
#length(diamonds$price < 250)
#length的长度不做条件判断，都是一样多的
#subset比较奇怪，数量很小，后续研究
#直接使用table加条件
table(diamonds$price < 500)
table(diamonds$price < 250)
table(diamonds$price >= 15000)
table(diamonds$price > 15000)
table(diamonds$price >= 15000)
#钻石数量
#length(diamonds$price < 250)
#length的长度不做条件判断，都是一样多的
#subset比较奇怪，数量很小，后续研究
#直接使用table加条件
table(diamonds$price < 500)
table(diamonds$price < 250)
library(dplyr)
install.packages('dplyr')
