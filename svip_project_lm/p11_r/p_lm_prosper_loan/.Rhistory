#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus)) & LoanStatus == c(Chargedoff, Completed, Current, Defaulted)) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
View(pls2n)
ggplot(aes(x = LoanStatus), data = subset(pls2n, LoanStatus == c(Chargedoff, Completed, Current, Defaulted) & !is.na(LoanStatus))) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus))) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == 'Chargedoff')) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus)) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted')) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff'))) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff' 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade, subset(pls2n, GreditGrade == c('A)))
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade, subset(pls2n, GreditGrade == c('A')))
table(pls2n)
summary(pls2n)
pls2o <- na.omit(pls2n)
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus)) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted')) + geom_histogram(stat = 'count') #+ facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade, subset(pls2n, GreditGrade == c('A')))
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2n, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
#pls3 <- na.omit(pls2)
#pls4 <- na.omit(pls2$CreditGrade)
#如果用na.omit则会只把做了处理的表存为变量
##带有na数据
#ggplot(aes(x = CreditGrade), y = ..count.., data = pls2n) + geom_histogram(stat = 'count')
##排除na数据
#levels(pls2n$CreditGrade)
# HR和NC并没有公开的说明可能是公司内部的一些定义
# http://mortgage-x.com/library/credit_grade.htm
# 同时没有AA有A+，应该是最高的评级
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
table(pls2n$LoanStatus)
ggplot(aes(x = CreditGrade), data = subset(pls2n, !is.na(CreditGrade))) + geom_histogram(stat = 'count') #可以和pls2对比，看下Null和NA的区别
# facet_wrap 是一个纬度，facet_grid( p1 ~ p2)是两个纬度
# 标示问题应该使用ggtitle进行处理，后续研究
table(pls2n$LoanStatus)
# geom_freqpoly(aes(color = clarity), binwidth = 0.1) #binwidth是用在freqpoly这类画图中的，在geom中加aes(color = )直接增加一个纬度
# 之后用+ facet_wrap(~cut) 再增加一个纬度就好了
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
# geom_freqpoly(aes(color = clarity), binwidth = 0.1) #binwidth是用在freqpoly这类画图中的，在geom中加aes(color = )直接增加一个纬度
# 之后用+ facet_wrap(~cut) 再增加一个纬度就好了
# cl1 使用facet
cl1 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
# geom_freqpoly(aes(color = clarity), binwidth = 0.1) #binwidth是用在freqpoly这类画图中的，在geom中加aes(color = )直接增加一个纬度
# 之后用+ facet_wrap(~cut) 再增加一个纬度就好了
levels(pls2n$CreditGrade)
# cls 使用color
cl2 <- ggplot(aes(x = LoanStatus), color = CreditGrade, data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
# cls 使用color
cl2 <- ggplot(aes(x = LoanStatus), color = CreditGrade, data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count', aes(color = CreditGrade))
# cls 使用color
cl2 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count', aes(color = CreditGrade))
# cl1 使用facet
cl1 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
# cl1 使用facet
cl1 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
# cl1 使用facet
cl1 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count')
ggplot(aes(x = CreditGrade), data = subset(pls2n, !is.na(CreditGrade))) + geom_histogram(stat = 'count') #可以和pls2对比，看下Null和NA的区别
# cl1 使用facet
cl1 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count')
# cl1 使用facet
cl1 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count')
# geom_freqpoly(aes(color = clarity), binwidth = 0.1) #binwidth是用在freqpoly这类画图中的，在geom中加aes(color = )直接增加一个纬度
# 之后用+ facet_wrap(~cut) 再增加一个纬度就好了
levels(pls2o$CreditGrade)
cl1 <- ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_line(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_bar(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_dotplot(stat = 'count', aes(color = CreditGrade)) + geom
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_abline(stat = 'count', aes(color = CreditGrade)) + geom
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_abline(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_area(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_bar(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_bin2d(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_boxplot(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_col(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_count(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_crossbar(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_density_2d(stat = 'count', aes(color = CreditGrade))
# cls 使用color 图像使用附值时不会显示，先调整好再完成
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_line(stat = 'count', aes(color = CreditGrade))
# cl1 使用facet(保留)
ggplot(aes(x = LoanStatus), data = subset(pls2o, !is.na(LoanStatus) & LoanStatus == c('Chargedoff', 'Completed', 'Current', 'Defaulted'))) + geom_histogram(stat = 'count') + facet_wrap(~CreditGrade)
ggplot(aes(x = BorrowerAPR), data = subset(pls2o, !is.na(LoanStatus))) + geom_line(stat = 'count')
ggplot(aes(x = BorrowerAPR), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count')
ggplot(aes(x = BorrowerAPR), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
summary(DelinquenciesLast7Years)
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
summary(pls2o$DelinquenciesLast7Years)
ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(1, 10)
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(1, 10)
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(0, 1)
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(LoanStatus))) + geom_bar(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(0, 1)
summary(pls2o$DelinquenciesLast7Years)
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1)
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_bar(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1)
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1)
summary(pls2o$DelinquenciesLast7Years) + scale_x_continuous(limits = c(0, 2), breaks = seq(0, 1000, 50))
summary(pls2o$DelinquenciesLast7Years) + scale_x_continuous(breaks = seq(0, 1000, 50))
summary(pls2o$DelinquenciesLast7Years) + scale_x_continuous(breaks = seq(0, 1, 0.1))
summary(pls2o$DelinquenciesLast7Years) + scale_x_discrete(breaks = seq(0, 1, 0.1))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1) scale_x_discrete(breaks = seq(0, 1, 0.1))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1) + scale_x_discrete(breaks = seq(0, 1, 0.1))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1) + scale_x_continuous(breaks = seq(0, 1, 0.1))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1) + scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + xlim(0, 1) + scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.05))
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(LoanStatus))) + geom_bar(stat = 'count', aes(color = CreditGrade))
summary(pls2o$IncomRange)
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_bar(stat = 'count', aes(color = CreditGrade))
summary(pls2o$IncomeRange)
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_bar(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_line(stat = 'count', aes(color = CreditGrade))
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = CreditGrade))
summary(pls2o$IncomeRange)
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = Occupation))
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = Occupation))
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(aes(color = Occupation))
ggplot(aes(x = IncomeRange, y = ..count..), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(aes(color = Occupation))
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pls2o, !is.na(IncomeRange)))
ggplot(aes(x = IncomeRange, y = ..count../sum(..count..)), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(aes(color = Occupation))
ggplot(aes(x = IncomeRange, y = ..count../sum(..count..)), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = Occupation))
ggplot(aes(x = IncomeRange, y = ..count../sum(..count..)), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = Occupation)) + facet_wrap(~ , Occupation)
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = Occupation)) + facet_wrap(~ Occupation)
ggplot(aes(x = IncomeRange, y = ..count../sum(..count..)), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o)) + geom_histogram(stat = 'count', aes(color = Occupation)) + facet_wrap(~ Occupation)
(IncomeRange)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
table(pls2o$IncomeRange)
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = Occupation)) + facet_wrap(~ Occupation)
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(aes(color = Occupation)) + facet_wrap(~ Occupation)
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count', aes(color = Occupation)) + facet_wrap(~ Occupation)
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.05))
# 设定工作目录，在生成Knit时会报错，将RMD和需要的文件放在一个目录中就可以了，之后运行RMD，用getwd（）在console中进行检查。
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# 加载数据
pl <- read.csv('prosperLoanData_tidycn.csv') # properloan
# 设定工作目录，在生成Knit时会报错，将RMD和需要的文件放在一个目录中就可以了，之后运行RMD，用getwd（）在console中进行检查。
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# 加载数据
pl <- read.csv('prosperLoanData_tidycn.csv') # properloan
pls <- select(pl, ListingKey, ListingCreationDate, CreditGrade, LoanStatus, Term, BorrowerAPR, ListingCategory, Occupation, EmploymentStatusDuration, IsBorrowerHomeowner, TotalCreditLinespast7years, DelinquenciesLast7Years, DebtToIncomeRatio, IncomeRange, LoanOriginalAmount) #properloan selected
#head(pls)
write.csv(pls, 'prosperLoanData_s.csv', row.names=FALSE)
#pls2 <- read.csv('prosperLoanData_s.csv')
#str(pls2$CreditGrade)
pls2n <- read.csv('prosperLoanData_s.csv', na.strings=c("", "NA")) # 将文件中的空字符转换成NA，方便R进行处理
pls2o <- na.omit(pls2n)
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.05))
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot()
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.05))
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 1), breaks = seq(0, 0.8, 0.05))
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, o.8), breaks = seq(0, 1, 0.05))
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#当增加了scale之后，即使不加limits参数，也会覆盖xlim，所以要融入scale，或者每个都用scale标示
#summary(pls2o$DelinquenciesLast7Years)
#bar图，转换轴，同样ratio下？count无意义，引入别的变量
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
ggplot(aes(x = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram(stat = 'count', aes(color = CreditGrade), binwidth = 0.05) + scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.05))
summary(pls2o$DebtToIncomRatio)
#采用箱线图试试
ggplot(aes(x = CreditGrade, y = DebtToIncomeRatio), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
summary(pls2o$DebtToIncomeRatio)
View(pls)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
table(pls2o$LoanOriginalAmount)
ggplot(aes(x = CreditGrade, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() + scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
ggplot(aes(x = CreditGrade, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
#ggplot(aes(x = CreditGrade, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = CreditGrade, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = CreditGrade, y = LoanOriginalAmount), color = IncomeRange, data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BrowerAPR, y = LoanOriginalAmount), color = IncomeRange, data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
View(pls2o)
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BrrowerAPR, y = LoanOriginalAmount), color = IncomeRange, data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), color = IncomeRange, data = subset(pls2o, !is.na(LoanStatus))) + geom_boxplot() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), color = IncomeRange, data = subset(pls2o, !is.na(LoanStatus))) + geom_histogram() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), color = IncomeRange, data = subset(pls2o, !is.na(LoanStatus))) + geom_point() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), color = 'IncomeRange', data = subset(pls2o, !is.na(LoanStatus))) + geom_point() #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade)) #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), position = jitter) #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), position = 'jitter') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/20) #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/5) #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/2) #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3) #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) +  #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#ggplot(aes(x = age, y = friend_count), data = pf) + geom_point(alpha = 1/20, position = position_jitter(h = 0)) + xlim(13,90) + coord_trans(y = 'sqrt')
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
```
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter()) +  #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#ggplot(aes(x = age, y = friend_count), data = pf) + geom_point(alpha = 1/20, position = position_jitter(h = 0)) + xlim(13,90) + coord_trans(y = 'sqrt')
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation)
#xlab('好友数量') + ylab('Percentage of users with that friend count')
```
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + xlim(13,90) + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0))# + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = IncomeRange), alpha = 1/3, position = position_jitter(h = 0))# + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
#table(pls2o$LoanOriginalAmount)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange)# + coord_trans(y = 'sqrt') #+ scale_y_continuous(limits = c(0, 0.8), breaks = seq(0, 1, 0.05))
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange) + ggtitle('test')
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(BorrowerAPR))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram(stat = 'count', binwidth = 300)# + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_point(stat = 'count', binwidth = 300)# + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_point()# + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram()# + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = c(0, 30000, 1000)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = c(0, 30000, 100)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 1000)) #包含可见数据
ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 2000)) #包含可见数据
plot1a <- ggplot(aes(x = BorrowerAPR), data = subset(pls2n, !is.na(BorrowerAPR))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340))
plot1b <- ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 2000))
grid.arrange(plot1a, plot1b, ncol = 1)
grid.arrange(plot1a, plot1b)
grid.arrange(plot1a, plot1b, ncol = 2)
plot1a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 0.001) + scale_x_continuous(limits = c(0.05635, 0.40635), breaks = seq(0.05635, 0.40635, 0.05)) + scale_y_continuous(limits = c(0, 340))
plot1b <- ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 2000))
grid.arrange(plot1a, plot1b, ncol = 2)
plot1a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5))
plot1b <- ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 2000))
grid.arrange(plot1a, plot1b, ncol = 2)
plot1b <- ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 2000)) + ggtitle("Plant growth with\ndifferent treatments") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
plot1a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5))
plot1b <- ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 2000)) + ggtitle("Plant growth with\ndifferent treatments") +
theme(plot.title = element_text(lineheight=.8, face="bold"))
grid.arrange(plot1a, plot1b, ncol = 2)
grid.arrange(plot2a, plot2b, ncol = 2)
plot2a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade))
plot2b <- ggplot(aes(x = DelinquenciesLast7Years), data = subset(pls2o, !is.na(LoanStatus))) + geom_freqpoly(stat = 'count', aes(color = CreditGrade)) + xlim(1, 10)
grid.arrange(plot2a, plot2b, ncol = 2)
grid.arrange(plot2a, plot2b, ncol = 1)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange) + scale_color_brewer(type = 'div')
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/3, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange) #+ scale_color_brewer(type = 'div')
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, !is.na(LoanStatus))) + geom_point(aes(color = CreditGrade), alpha = 1/2, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange) #+ scale_color_brewer(type = 'div')
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange')
library(ggplot2)
#library(rstudioapi) # 设置目录使用
library(dplyr)
library(gridExtra)
table(pls2o$IncomeRange)
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange')
#```{r echo=FALSE, message=FALSE, warning=FALSE}
```{r echo=FALSE, fig.height=30, fig.width=30, message=FALSE, warning=FALSE}
table(pls2o$IncomeRange)
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange')
#```{r echo=FALSE, message=FALSE, warning=FALSE}
```{r echo=FALSE, fig.height=20, fig.width=20, message=FALSE, warning=FALSE}
table(pls2o$IncomeRange)
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange')
plot1a <- ggplot(aes(x = TotalCreditLinespast7years), data = subset(pls2n, !is.na(TotalCreditLinespast7years))) + geom_histogram(stat = 'count', binwidth = 1) + scale_x_continuous(limits = c(0, 84), breaks = seq(0, 845, 5)) + ggtitle('7年内贷款次数')
plot1b <- ggplot(aes(x = LoanOriginalAmount), data = subset(pls2n, !is.na(LoanOriginalAmount))) + geom_histogram() + scale_x_continuous(breaks = seq(0, 30000, 5000)) + ggtitle('贷款额统计')
#+ ggtitle("Plant growth with\ndifferent treatments") + theme(plot.title = element_text(lineheight=.8, face="bold"))
# Title只是在每个plot上，grid.arrange无法定制title
grid.arrange(plot1a, plot1b, ncol = 2, top = '绘图1：公司运营考察/n公司7年内业务次数 vs 单次贷款额统计')
#```{r echo=FALSE, fig.height=20, fig.width=20, message=FALSE, warning=FALSE}
#以上的方法是调整显示图形，但是当knit输出时候，会把图形放在文档中，图形很大的时候，字会看不清，尝试使用别的方法，如后面代码
#theme(axis.text.x = element_text(size = 15, family = myFont, color = green, face = bold, vjust = 0.5, hjust = 0.5, angle = 45))
table(pls2o$IncomeRange)
theme(axis.text.x = element_text(size = 15, family = myFont, color = green, face = bold, vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 15, color = green, face = bold, vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 15, color = 'green', face = bold, vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 10, face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 10, face = 'bold', vjust = 0.5, hjust = 0.5))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 10, vjust = 0.5, hjust = 0.5))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 8, vjust = 0.5, hjust = 0.5))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 8, hjust = 0.5))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 8))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 8, face = 'bold'))
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 6, face = 'bold'))
#```{r echo=FALSE, message=FALSE, warning=FALSE}
```{r echo=FALSE, fig.height=20, fig.width=20, message=FALSE, warning=FALSE}
#以上的方法是调整显示图形，但是当knit输出时候，会把图形放在文档中，图形很大的时候，字会看不清，尝试使用别的方法，如后面代码
#theme(axis.text.x = element_text(size = 15, family = myFont, color = green, face = bold, vjust = 0.5, hjust = 0.5, angle = 45))
table(pls2o$IncomeRange)
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 6, face = 'bold'))
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, IncomeRange != 'Not displayed')) + geom_point(aes(color = CreditGrade), alpha = 1/2, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange)  +  ggtitle('绘图3：贷款额与收入水平关系')
library(ggplot2)
#library(rstudioapi) # 设置目录使用
library(dplyr)
library(gridExtra)
ggplot(aes(x = BorrowerAPR, y = LoanOriginalAmount), data = subset(pls2o, IncomeRange != 'Not displayed')) + geom_point(aes(color = CreditGrade), alpha = 1/2, position = position_jitter(h = 0)) + facet_wrap(~ IncomeRange)  +  ggtitle('绘图3：贷款额与收入水平关系')
knit(..., encoding = 'UTF-8')  # if the input document is encoded in UTF-8
knit_with_parameters('~/Documents/Anaconda/DAND-Project6/projectR/projectReport-zh1.6.Rmd')
library(ggplot2)
#library(rstudioapi) # 设置目录使用
library(dplyr)
library(gridExtra)
library(knitr)
knit(..., encoding = 'UTF-8')
knit( encoding = 'UTF-8')
knitr.knit( encoding = 'UTF-8')
#+ theme(axis.text.y = element_text(size = 15, color = 'green', face = 'bold', vjust = 0.5, hjust = 0.5, angle = 45))
#ggplot(aes(x = IncomeRange), data = subset(pls2o, !is.na(IncomeRange))) + geom_histogram(stat = 'count') + facet_wrap(~ Occupation) + ggtitle('Occupation - IncomeRange')
ggplot(aes(x = IncomeRange, y = Occupation), data = subset(pls2o, !is.na(IncomeRange))) + geom_point(alpha = 1/3, position = position_jitter(h = 0)) + ggtitle('中文Occupation - IncomeRange') + theme(axis.text.y = element_text(size = 18, face = 'bold', family = 'STKaiti')) + theme(axis.text.x = element_text(size = 18, face = 'bold'))
install.packages(c("bindr", "DBI", "httpuv", "MASS", "mgcv", "nlme", "openssl", "pillar", "plogr", "Rcpp", "reticulate", "rmarkdown", "rpart", "stringi", "tikzDevice", "tinytex", "withr", "yaml"))
